#  Copyright (C) 2025 Julian Nowaczek.
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
import unittest

import numpy as np
from numpy import array

from estimation_comparison.data_collection.estimator.autocorrelation import Autocorrelation


class BasicAutocorrelationTests(unittest.TestCase):
    basic = Autocorrelation({"block_size": 1024})
    lew = Autocorrelation({"block_size": 200})

    def test_zeros(self):
        result = self.basic.estimate(np.frombuffer(b"0" * 1024))
        self.assertEqual(result, 1)

    def test_count(self):
        result = self.basic.estimate(np.frombuffer(bytes(range(256)) * 4))
        self.assertEqual(result, 0)

    def test_lew(self):
        lew = [-213, -564, -35, -15, 141, 115, -420, -360, 203, -338, -431, 194, -220, -513, 154, -125, -559, 92, -21,
               -579, -52, 99, -543, -175, 162, -457, -346, 204, -300, -474, 164, -107, -572, -8, 83, -541, -224, 180,
               -420, -374, 201, -236, -531, 83, 27, -564, -112, 131, -507, -254, 199, -311, -495, 143, -46, -579, -90,
               136, -472, -338, 202, -287, -477, 169, -124, -568, 17, 48, -568, -135, 162, -430, -422, 172, -74, -577,
               -13, 92, -534, -243, 194, -355, -465, 156, -81, -578, -64, 139, -449, -384, 193, -198, -538, 110, -44,
               -577, -6, 66, -552, -164, 161, -460, -344, 205, -281, -504, 134, -28, -576, -118, 156, -437, -381, 200,
               -220, -540, 83, 11, -568, -160, 172, -414, -408, 188, -125, -572, -32, 139, -492, -321, 205, -262, -504,
               142, -83, -574, 0, 48, -571, -106, 137, -501, -266, 190, -391, -406, 194, -186, -553, 83, -13, -577, -49,
               103, -515, -280, 201, 300, -506, 131, -45, -578, -80, 138, -462, -361, 201, -211, -554, 32, 74, -533,
               -235, 187, -372, -442, 182, -147, -566, 25, 68, -535, -244, 194, -351, -463, 174, -125, -570, 15, 72,
               -550, -190, 172, -424, -385, 198, -218, -536, 96]
        expected = array([[-6.35365087e-04, -6.07276744e-03, 1.16948545e-02,
                           -2.82778598e-04, -7.49380886e-03, 6.64292309e-03,
                           -4.56006360e-03, -3.83667821e-03, 1.63891833e-02,
                           -1.39209712e-02, -1.07536429e-02, 2.95508247e-02,
                           -1.42449063e-02, -2.58025047e-02, 4.06498555e-02,
                           -4.47008589e-03, -4.53201652e-02, 4.41432297e-02,
                           1.55045980e-02, -6.30176566e-02, 3.33797748e-02,
                           4.33005170e-02, -7.19525230e-02, 7.29920555e-03,
                           7.20153915e-02, -6.23754346e-02, -3.10002214e-02,
                           9.00078411e-02, -3.29198628e-02, -7.11316609e-02,
                           8.67377186e-02, 1.07871018e-02, -1.00854441e-01,
                           6.19336704e-02, 6.29982565e-02, -1.10857682e-01,
                           1.07118097e-02, 1.08712645e-01, -8.69908100e-02,
                           -5.16902717e-02, 1.24652808e-01, -3.31671878e-02,
                           -1.06758225e-01, 9.05926393e-02, 4.27422799e-02,
                           -1.27927793e-01, 6.46634458e-02, 1.14057410e-01,
                           -1.31181627e-01, -2.95681958e-02, 1.50958436e-01,
                           -7.37083025e-02, -1.04136813e-01, 1.45742806e-01,
                           9.99229117e-03, -1.58309620e-01, 9.38603799e-02,
                           1.02772845e-01, -1.62512480e-01, -1.12851007e-03,
                           1.69181093e-01, -1.08805173e-01, -1.08184649e-01,
                           1.83256570e-01, -5.93784520e-03, -1.89417045e-01,
                           1.29801099e-01, 1.13149070e-01, -2.16324822e-01,
                           2.35757039e-02, 2.13645450e-01, -1.69697478e-01,
                           -1.11737939e-01, 2.58069075e-01, -5.46453200e-02,
                           -2.39954372e-01, 2.19768559e-01, 1.04587890e-01,
                           -3.02884153e-01, 9.25769560e-02, 2.52030942e-01,
                           -2.63034593e-01, -8.43841330e-02, 3.27174746e-01,
                           -1.30081044e-01, -2.51948606e-01, 2.98283405e-01,
                           6.29704178e-02, -3.43294953e-01, 1.55474815e-01,
                           2.47402632e-01, -3.15672177e-01, -5.01788325e-02,
                           3.55552430e-01, -1.78456546e-01, -2.49505248e-01,
                           3.42767040e-01, 3.31304552e-02, -3.69360234e-01,
                           2.04717941e-01, 2.41858900e-01, -3.65349790e-01,
                           -9.61940410e-03, 3.75288093e-01, -2.31845071e-01,
                           -2.29809243e-01, 3.81286119e-01, -1.07379550e-02,
                           -3.81586308e-01, 2.52607520e-01, 2.27146243e-01,
                           -4.03565122e-01, 2.49169646e-02, 4.02144950e-01,
                           -2.88151924e-01, -2.31791137e-01, 4.49884263e-01,
                           -5.13304943e-02, -4.27422694e-01, 3.27870238e-01,
                           2.23631796e-01, -4.78350993e-01, 8.08194706e-02,
                           4.33411359e-01, -3.61599175e-01, -2.08228722e-01,
                           4.98287791e-01, -1.07520827e-01, -4.38063209e-01,
                           3.88005520e-01, 2.02158488e-01, -5.20449258e-01,
                           1.21980450e-01, 4.46826165e-01, -4.05232336e-01,
                           -1.92260387e-01, 5.30758435e-01, -1.44549101e-01,
                           -4.45890764e-01, 4.29223764e-01, 1.78193236e-01,
                           -5.50056338e-01, 1.71386271e-01, 4.51092328e-01,
                           -4.65443388e-01, -1.61840641e-01, 5.78541637e-01,
                           -2.07595666e-01, -4.57600002e-01, 5.07300862e-01,
                           1.39930070e-01, -6.07894239e-01, 2.50418060e-01,
                           4.53570519e-01, -5.45169888e-01, -1.04847960e-01,
                           6.17116225e-01, -2.82910789e-01, -4.49528938e-01,
                           5.76432704e-01, 8.40102338e-02, -6.36287268e-01,
                           3.21692640e-01, 4.33174526e-01, -6.01019436e-01,
                           -5.24300195e-02, 6.40623681e-01, -3.56941756e-01,
                           -4.21577121e-01, 6.29088292e-01, 2.61988532e-02,
                           -6.54277389e-01, 3.88528035e-01, 4.15408913e-01,
                           -6.58335333e-01, -6.32534486e-04, 6.70177451e-01,
                           -4.29661465e-01, -4.09821551e-01, 7.00509687e-01,
                           -3.32642962e-02, -6.95651379e-01, 4.81864943e-01,
                           4.02091425e-01, -7.56326788e-01, 7.13826843e-02,
                           7.31525640e-01, -5.46316738e-01, -4.00433460e-01,
                           8.24513136e-01, -1.24870822e-01, -7.69256070e-01,
                           6.32846512e-01, 3.76063789e-01, -8.98156108e-01,
                           2.05155438e-01, 7.74689225e-01, -7.40350266e-01,
                           -3.07304801e-01, 1.00000000e+00, -3.07304801e-01,
                           -7.40350266e-01, 7.74689225e-01, 2.05155438e-01,
                           -8.98156108e-01, 3.76063789e-01, 6.32846512e-01,
                           -7.69256070e-01, -1.24870822e-01, 8.24513136e-01,
                           -4.00433460e-01, -5.46316738e-01, 7.31525640e-01,
                           7.13826843e-02, -7.56326788e-01, 4.02091425e-01,
                           4.81864943e-01, -6.95651379e-01, -3.32642962e-02,
                           7.00509687e-01, -4.09821551e-01, -4.29661465e-01,
                           6.70177451e-01, -6.32534486e-04, -6.58335333e-01,
                           4.15408913e-01, 3.88528035e-01, -6.54277389e-01,
                           2.61988532e-02, 6.29088292e-01, -4.21577121e-01,
                           -3.56941756e-01, 6.40623681e-01, -5.24300195e-02,
                           -6.01019436e-01, 4.33174526e-01, 3.21692640e-01,
                           -6.36287268e-01, 8.40102338e-02, 5.76432704e-01,
                           -4.49528938e-01, -2.82910789e-01, 6.17116225e-01,
                           -1.04847960e-01, -5.45169888e-01, 4.53570519e-01,
                           2.50418060e-01, -6.07894239e-01, 1.39930070e-01,
                           5.07300862e-01, -4.57600002e-01, -2.07595666e-01,
                           5.78541637e-01, -1.61840641e-01, -4.65443388e-01,
                           4.51092328e-01, 1.71386271e-01, -5.50056338e-01,
                           1.78193236e-01, 4.29223764e-01, -4.45890764e-01,
                           -1.44549101e-01, 5.30758435e-01, -1.92260387e-01,
                           -4.05232336e-01, 4.46826165e-01, 1.21980450e-01,
                           -5.20449258e-01, 2.02158488e-01, 3.88005520e-01,
                           -4.38063209e-01, -1.07520827e-01, 4.98287791e-01,
                           -2.08228722e-01, -3.61599175e-01, 4.33411359e-01,
                           8.08194706e-02, -4.78350993e-01, 2.23631796e-01,
                           3.27870238e-01, -4.27422694e-01, -5.13304943e-02,
                           4.49884263e-01, -2.31791137e-01, -2.88151924e-01,
                           4.02144950e-01, 2.49169646e-02, -4.03565122e-01,
                           2.27146243e-01, 2.52607520e-01, -3.81586308e-01,
                           -1.07379550e-02, 3.81286119e-01, -2.29809243e-01,
                           -2.31845071e-01, 3.75288093e-01, -9.61940410e-03,
                           -3.65349790e-01, 2.41858900e-01, 2.04717941e-01,
                           -3.69360234e-01, 3.31304552e-02, 3.42767040e-01,
                           -2.49505248e-01, -1.78456546e-01, 3.55552430e-01,
                           -5.01788325e-02, -3.15672177e-01, 2.47402632e-01,
                           1.55474815e-01, -3.43294953e-01, 6.29704178e-02,
                           2.98283405e-01, -2.51948606e-01, -1.30081044e-01,
                           3.27174746e-01, -8.43841330e-02, -2.63034593e-01,
                           2.52030942e-01, 9.25769560e-02, -3.02884153e-01,
                           1.04587890e-01, 2.19768559e-01, -2.39954372e-01,
                           -5.46453200e-02, 2.58069075e-01, -1.11737939e-01,
                           -1.69697478e-01, 2.13645450e-01, 2.35757039e-02,
                           -2.16324822e-01, 1.13149070e-01, 1.29801099e-01,
                           -1.89417045e-01, -5.93784520e-03, 1.83256570e-01,
                           -1.08184649e-01, -1.08805173e-01, 1.69181093e-01,
                           -1.12851007e-03, -1.62512480e-01, 1.02772845e-01,
                           9.38603799e-02, -1.58309620e-01, 9.99229117e-03,
                           1.45742806e-01, -1.04136813e-01, -7.37083025e-02,
                           1.50958436e-01, -2.95681958e-02, -1.31181627e-01,
                           1.14057410e-01, 6.46634458e-02, -1.27927793e-01,
                           4.27422799e-02, 9.05926393e-02, -1.06758225e-01,
                           -3.31671878e-02, 1.24652808e-01, -5.16902717e-02,
                           -8.69908100e-02, 1.08712645e-01, 1.07118097e-02,
                           -1.10857682e-01, 6.29982565e-02, 6.19336704e-02,
                           -1.00854441e-01, 1.07871018e-02, 8.67377186e-02,
                           -7.11316609e-02, -3.29198628e-02, 9.00078411e-02,
                           -3.10002214e-02, -6.23754346e-02, 7.20153915e-02,
                           7.29920555e-03, -7.19525230e-02, 4.33005170e-02,
                           3.33797748e-02, -6.30176566e-02, 1.55045980e-02,
                           4.41432297e-02, -4.53201652e-02, -4.47008589e-03,
                           4.06498555e-02, -2.58025047e-02, -1.42449063e-02,
                           2.95508247e-02, -1.07536429e-02, -1.39209712e-02,
                           1.63891833e-02, -3.83667821e-03, -4.56006360e-03,
                           6.64292309e-03, -7.49380886e-03, -2.82778598e-04,
                           1.16948545e-02, -6.07276744e-03, -6.35365087e-04]])
        result = self.lew.estimate(np.asarray([lew]))
        self.assertEqual(result, expected)


if __name__ == '__main__':
    unittest.main()
